{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\om\\\\OneDrive\\\\Desktop\\\\smart-career-platform\\\\client\\\\src\\\\components\\\\Chatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Chatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      sender: \"user\",\n      text: input\n    };\n    setMessages([...messages, userMessage]);\n    try {\n      const response = await fetch(\"http://localhost:5000/ask\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      const data = await response.json();\n      const botMessage = {\n        sender: \"bot\",\n        text: data.reply\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: \"Error contacting the AI service.\"\n      }]);\n    }\n    setInput(\"\");\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") sendMessage();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83C\\uDF93 Career Guidance Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `msg ${msg.sender}`,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender === \"user\" ? \"You\" : \"AI\", \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      onKeyDown: handleKeyDown,\n      placeholder: \"Ask about careers, skills, courses...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"bxrUXnlHDt+zalfpk8IFX5tJV48=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","sendMessage","trim","userMessage","sender","text","response","fetch","method","headers","body","JSON","stringify","message","data","json","botMessage","reply","prev","error","handleKeyDown","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","idx","type","value","onChange","target","onKeyDown","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/om/OneDrive/Desktop/smart-career-platform/client/src/components/Chatbot.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Chatbot.css\";\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { sender: \"user\", text: input };\r\n    setMessages([...messages, userMessage]);\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/ask\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ message: input }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      const botMessage = { sender: \"bot\", text: data.reply };\r\n      setMessages((prev) => [...prev, botMessage]);\r\n    } catch (error) {\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        { sender: \"bot\", text: \"Error contacting the AI service.\" },\r\n      ]);\r\n    }\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") sendMessage();\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <h3>ðŸŽ“ Career Guidance Chatbot</h3>\r\n      <div className=\"chat-window\">\r\n        {messages.map((msg, idx) => (\r\n          <div key={idx} className={`msg ${msg.sender}`}>\r\n            <strong>{msg.sender === \"user\" ? \"You\" : \"AI\"}:</strong> {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n        onKeyDown={handleKeyDown}\r\n        placeholder=\"Ask about careers, skills, courses...\"\r\n      />\r\n      <button onClick={sendMessage}>Send</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}